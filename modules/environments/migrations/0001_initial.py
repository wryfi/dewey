# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-06-09 15:13
from __future__ import unicode_literals

import dewey.utils
from django.db import migrations, models
import django.db.models.deletion
import django_enumfield.db.fields
import environments

from django.contrib.contenttypes.management import update_contenttypes
from django.apps import apps


def update_environment_contenttypes(*args):
    environments = apps.get_app_config('environments')
    update_contenttypes(environments)


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('description', models.CharField(blank=True, max_length=128)),
                ('kind', django_enumfield.db.fields.EnumField(default=1, enum=environments.ClusterType)),
            ],
        ),
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(help_text='a short name for this environment')),
                ('hostname_regex', models.CharField(help_text='regex that defines valid host names for this env', max_length=128)),
                ('description', models.TextField(blank=True, help_text='(optional) description of the environment')),
            ],
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(help_text='FQDN', max_length=256)),
                ('operating_system', django_enumfield.db.fields.EnumField(default=1, enum=environments.OperatingSystem)),
                ('parent_id', models.PositiveIntegerField()),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='environments.Environment')),
                ('parent_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='matches salt state name', max_length=256)),
                ('description', models.CharField(blank=True, max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Safe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='name for this collection of secrets', max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='SafeAccessControl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('safe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='environments.Safe')),
            ],
        ),
        migrations.CreateModel(
            name='Secret',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='dotted-path key for this secret', max_length=256)),
                ('secret', models.TextField()),
                ('safe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='environments.Safe')),
            ],
        ),
        migrations.CreateModel(
            name='Vault',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='a friendly name for this vault', max_length=256, unique=True)),
                ('all_environments', models.BooleanField(default=False, help_text='this vault is for secrets shared among environments')),
                ('vault_protocol', django_enumfield.db.fields.EnumField(default=1, enum=dewey.utils.ProtocolEnum)),
                ('vault_host', models.CharField(max_length=256)),
                ('vault_port', models.PositiveIntegerField()),
                ('transit_key_name', models.CharField(max_length=256)),
                ('vault_user', models.CharField(max_length=128)),
                ('vault_password_variable', models.CharField(help_text='environment variable containing password', max_length=128)),
                ('environment', models.ForeignKey(blank=True, help_text='this vault is specific to the selected environment', null=True, on_delete=django.db.models.deletion.CASCADE, to='environments.Environment')),
            ],
        ),
        migrations.AddField(
            model_name='safe',
            name='vault',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='environments.Vault'),
        ),
        migrations.AddField(
            model_name='host',
            name='roles',
            field=models.ManyToManyField(blank=True, to='environments.Role'),
        ),
        migrations.AddField(
            model_name='cluster',
            name='members',
            field=models.ManyToManyField(to='environments.Host'),
        ),
        migrations.AlterUniqueTogether(
            name='secret',
            unique_together=set([('name', 'safe')]),
        ),
        # we need to run this here for the Hosts migrations to succeed.
        migrations.RunPython(update_environment_contenttypes)
    ]
