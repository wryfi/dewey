# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-06-10 19:31
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion

from django.contrib.contenttypes.management import update_contenttypes
from django.apps import apps


def update_networks_contenttypes(*args):
    networks = apps.get_app_config('networks')
    update_contenttypes(networks)


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('environments', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddressAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=15)),
                ('canonical', models.BooleanField(default=True, help_text='This address is the canonical (DNS) address for the host')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address_assignments', to='environments.Host')),
            ],
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='domain name, e.g. plos.org', max_length=256)),
                ('dns_enabled', models.BooleanField(default=False, help_text='powerdns integration')),
            ],
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField()),
                ('description', models.CharField(max_length=256)),
                ('cidr', models.CharField(help_text='network CIDR notation, e.g. 192.168.1.0/24', max_length=18)),
                ('interface_id', models.PositiveIntegerField(help_text='what interface should minions associate this addr with?')),
            ],
        ),
        migrations.CreateModel(
            name='PowerDnsServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='friendly name for this pdns server', max_length=256)),
                ('api_ip_address', models.GenericIPAddressField()),
                ('api_port', models.PositiveIntegerField(default=8081)),
                ('api_key_environment_variable', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='ReservedAddressBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_address', models.GenericIPAddressField()),
                ('end_address', models.GenericIPAddressField()),
                ('description', models.CharField(blank=True, max_length=256)),
                ('network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='networks.Network')),
            ],
        ),
        migrations.AddField(
            model_name='domain',
            name='server',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='networks.PowerDnsServer'),
        ),
        migrations.AddField(
            model_name='addressassignment',
            name='network',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address_assignments', to='networks.Network'),
        ),
        migrations.AlterUniqueTogether(
            name='addressassignment',
            unique_together=set([('network', 'address')]),
        ),
        migrations.RunPython(update_networks_contenttypes)
    ]
